##############################################
##                 SETUP                    ##
##############################################

- set_fact:
    rest_path: "/rest/control/fabrics/{{ ansible_it_fabric }}"
    rest_ext_path: "/rest/control/fabrics/{{ ansible_ext_fabric }}"
  when: controller_version == "11"
  tags: sanity

- set_fact:
    rest_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ ansible_it_fabric }}"
    rest_ext_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ ansible_ext_fabric }}"
  when: controller_version >= "12"
  tags: sanity

- name: REPLACED - Verify if fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_path }}"
  register: result
  tags: sanity

- assert:
    that:
    - 'result.response.DATA != None'
  tags: sanity  

- name: REPLACED - Verify if service fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_ext_path }}"
  register: result
  tags: sanity

- assert:
    that:
    - 'result.response.DATA != None'
  tags: sanity  

- name: REPLACED - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted
  tags: sanity  

- name: REPLACED -  Query fabric state before proceeding
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query
  register: result
  tags: sanity

  until:
    - 'result.response|length == 0'
  retries: 10
  delay: 5
  tags: sanity

- name: REPLACED - Create Service Node with 2 switches and vPC Interface with type firewall
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: merged
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: "{{ ansible_vpc1 }}"
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result
  tags: sanity

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "{{ ansible_vpc1 }}"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Virtual"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'
  tags: sanity  

- name: REPLACED - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20
  tags: sanity  

###############################################
###                REPLACED                  ##
###############################################

- name: REPLACED - Replace Service Node with form factor physical
  cisco.dcnm.dcnm_service_node: &conf
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: replaced
    config:
    - name: SN-11
      type: firewall
      form_factor: physical
      svc_int_name: svc1
      attach_interface: "{{ ansible_vpc1 }}"
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result
  tags: sanity

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "{{ ansible_vpc1 }}"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Physical"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'
  tags: sanity  

- name: REPLACED - sleep for 40 seconds for DCNM to completely update the state
  wait_for:
    timeout: 40
  tags: sanity

- name: REPLACED - conf - Idempotence
  cisco.dcnm.dcnm_service_node: *conf
  register: result
  tags: sanity

- assert:
    that:
    - 'result.changed == false'
  tags: sanity  

- name: REPLACED - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20
  tags: sanity  

#########################################################

- name: OVERRIDDEN - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted
  tags: sanity  

- name: OVERRIDDEN -  Query fabric state before proceeding
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query
  register: result
  tags: sanity

  until:
    - 'result.response|length == 0'
  retries: 10
  delay: 5
  tags: sanity

- name: OVERRIDDEN - Create Service Node with 2 switches and vPC Interface with type firewall
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: merged
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: "{{ ansible_vpc1 }}"
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result
  tags: sanity

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "{{ ansible_vpc1 }}"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Virtual"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'
  tags: sanity  

- name: OVERRIDDEN - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20
  tags: sanity  

###############################################
###              OVERRIDDEN                  ##
###############################################

- name: OVERRIDDEN - Update service node - delete and create
  cisco.dcnm.dcnm_service_node: &conf
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: overridden
    config:
    - name: SN-12
      type: load_balancer
      form_factor: physical
      svc_int_name: svc12
      attach_interface: "{{ ansible_vpc1 }}"
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result
  tags: sanity

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].METHOD == "DELETE"'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[1].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[1].DATA.attachedSwitchInterfaceName == "{{ ansible_vpc1 }}"'
    - 'result.response[1].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[1].DATA.formFactor == "Physical"'
    - 'result.response[1].DATA.interfaceName == "svc12"'
    - 'result.response[1].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[1].DATA.type == "ADC"'
    - 'result.response[1].DATA.name == "SN-12"'
  tags: sanity  

- name: OVERRIDDEN - sleep for 40 seconds for DCNM to completely update the state
  wait_for:
    timeout: 40
  tags: sanity  

- name: OVERRIDDEN - conf - Idempotence
  cisco.dcnm.dcnm_service_node: *conf
  register: result
  tags: sanity

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
  tags: sanity  

- name: OVERRIDDEN - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20
  tags: sanity  

- name: OVERRIDDEN - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted
  tags: sanity  

- name: OVERRIDDEN -  Query fabric state before proceeding
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query  
  register: result
  tags: sanity

  until:
    - 'result.response|length == 0'
  retries: 10
  delay: 5
  tags: sanity
